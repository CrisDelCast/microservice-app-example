apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-api
  labels:
    app: auth-api
spec:
  replicas: 2
  selector:
    matchLabels:
      app: auth-api
  template:
    metadata:
      labels:
        app: auth-api
    spec:
      containers:
        - name: auth-api
          # Asegúrate que el pipeline de CI/CD reemplace ':github.sha' con el tag correcto si usas otro
          image: acrformymicroservices20250424.azurecr.io/auth-api:github.sha
          ports:
            - containerPort: 8080 # El puerto donde la aplicación escucha
          env:
            # Variable de entorno para el secreto JWT (asumiendo que ya creas el Secret en el pipeline)
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: auth-api-secrets # Nombre del Secret de Kubernetes
                  key: JWT_SECRET      # Clave dentro del Secret
            # --- NUEVA VARIABLE DE ENTORNO CRÍTICA ---
            # Establecemos la variable que la aplicación lee para el puerto
            - name: AUTH_API_PORT
              value: "8080" # <-- El valor debe ser solo el número del puerto
            # --- Fin de NUEVA VARIABLE DE ENTORNO ---
          # NOTA: Considera añadir probes de salud (tcpSocket es una buena opción si no puedes modificar el código)
          # livenessProbe:
          #   tcpSocket:
          #     port: 8080
          #   initialDelaySeconds: 10
          #   periodSeconds: 5
          #   timeoutSeconds: 3
          #   failureThreshold: 3
          # readinessProbe:
          #   tcpSocket:
          #     port: 8080
          #   initialDelaySeconds: 15
          #   periodSeconds: 5
          #   timeoutSeconds: 3
          #   failureThreshold: 3
          # ... otras configuraciones del contenedor si las hay
--- # Separador de documentos YAML
apiVersion: v1
kind: Service
metadata:
  name: auth-api
spec:
  type: ClusterIP # O LoadBalancer si necesitas acceso externo directo
  selector:
    app: auth-api
  ports:
    - port: 80 # Puerto del servicio
      targetPort: 8080 # Puerto del contenedor al que el servicio redirige el tráfico
