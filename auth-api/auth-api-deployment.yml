apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-api
  labels:
    app: auth-api
spec:
  replicas: 2
  selector:
    matchLabels:
      app: auth-api
  template:
    metadata:
      labels:
        app: auth-api
    spec:
      containers:
        - name: auth-api
          image: acrformymicroservices20250424.azurecr.io/auth-api:github.sha # Asegúrate que el tag sea correcto, el pipeline lo reemplaza
          ports:
            - containerPort: 8080 # El puerto donde la aplicación escucha
          env:
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: auth-api-secrets # Nombre del Secret de Kubernetes
                  key: JWT_SECRET      # Clave dentro del Secret
          # --- Probes ajustadas para usar tcpSocket ---
          livenessProbe: # Chequeo de vida: ¿Está la aplicación 'viva'?
            tcpSocket:
              port: 8080 # Verifica si se puede establecer una conexión TCP al puerto 8080
            initialDelaySeconds: 10 # Tiempo inicial de espera antes del primer chequeo (ajusta si es necesario)
            periodSeconds: 5        # Frecuencia de los chequeos (cada 5 segundos)
            timeoutSeconds: 3       # Tiempo máximo para que la conexión se establezca
            failureThreshold: 3     # Número de fallos consecutivos antes de considerar el pod no saludable
          readinessProbe: # Chequeo de preparación: ¿Está la aplicación lista para recibir tráfico?
            tcpSocket:
              port: 8080 # Verifica si se puede establecer una conexión TCP al puerto 8080
            initialDelaySeconds: 15 # Tiempo inicial de espera (suele ser un poco más que liveness)
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          # --- Fin de las probes ajustadas ---
          # ... otras configuraciones del contenedor si las hay
--- # Separador de documentos YAML
apiVersion: v1
kind: Service
metadata:
  name: auth-api
spec:
  type: ClusterIP # O LoadBalancer si necesitas acceso externo directo
  selector:
    app: auth-api
  ports:
    - port: 80 # Puerto del servicio
      targetPort: 8080 # Puerto del contenedor al que el servicio redirige el tráfico
