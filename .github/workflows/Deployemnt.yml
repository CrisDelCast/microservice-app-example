name: Deploy to Azure Kubernetes Service

on:
  push:
    branches:
      - master
      - infra/dev
      - infra/feature/automation

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      IMAGE_TAG: ${{ github.sha }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get AKS Credentials
        run: |
          az aks get-credentials \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --name ${{ secrets.AKS_CLUSTER_NAME }} \
            --overwrite-existing

      - name: Ensure Namespace
        run: |
          kubectl get namespace microservices || \
          kubectl create namespace microservices

      - name: ACR Login
        run: az acr login --name ${{ secrets.AZURE_CONTAINER_REGISTRY }}

      - name: Create Redis Secret
        id: redis-secret
        run: |
          REDIS_KEY=$(az redis list-keys \
            --name unique-redis-cache-2023 \
            --resource-group microservices-rg \
            --query "primaryKey" -o tsv)
          echo "::add-mask::$REDIS_KEY"
          echo "REDIS_PASSWORD=$REDIS_KEY" >> $GITHUB_ENV

          kubectl create secret generic redis-secret \
            --namespace microservices \
            --from-literal=REDIS_PASSWORD="$REDIS_KEY" \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: Create Auth API Secret
        run: |
          kubectl create secret generic auth-api-secrets \
            --namespace microservices \
            --from-literal=JWT_SECRET="${{ secrets.AUTH_JWT_SECRET }}" \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: Build and Push Docker Images
        run: |
          for dir in ./auth-api ./frontend ./users-api ./todos-api ./log-message-processor; do
            service=$(basename $dir)
            docker build -t ${{ secrets.AZURE_CONTAINER_REGISTRY }}/$service:${{ env.IMAGE_TAG }} $dir
            docker push ${{ secrets.AZURE_CONTAINER_REGISTRY }}/$service:${{ env.IMAGE_TAG }}
          done

      - name: Update Manifests with New Image Tags
        run: |
          for dir in ./auth-api ./frontend ./users-api ./todos-api ./log-message-processor; do
            service=$(basename $dir)
            sed -i "s|image: .*|image: ${{ secrets.AZURE_CONTAINER_REGISTRY }}/$service:${{ env.IMAGE_TAG }}|" $dir/${service}-deployment.yml
          done

      - name: Deploy Updated Manifests
        run: |
          for dir in ./auth-api ./frontend ./users-api ./todos-api ./log-message-processor; do
            kubectl apply -f $dir/${dir##*/}-deployment.yml --namespace microservices
          done

      - name: Restart Deployments
        run: |
          for app in auth-api frontend users-api todos-api log-message-processor; do
            kubectl rollout restart deployment $app --namespace microservices
          done

      - name: List Pods
        run: kubectl get pods -n microservices
