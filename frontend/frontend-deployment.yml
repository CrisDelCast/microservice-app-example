apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: microservices
spec:
  replicas: 2
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend
          image: acrformymicroservices-test.azurecr.io/frontend:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          env:
            - name: PORT
              value: "8080"
            - name: AUTH_API_ADDRESS
              value: "http://auth-api:8000"
            - name: TODOS_API_ADDRESS
              value: "http://todos-api:8082"
            - name: ZIPKIN_URL
              value: "http://zipkin.microservices.svc.cluster.local:9411/api/v2/spans"  # Direcci√≥n de Zipkin
            - name: SPRING_ZIPKIN_ENABLED
              value: "true"  # Solo si usas Spring Boot
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 10
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
            failureThreshold: 3
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: microservices
spec:
  type: LoadBalancer
  selector:
    app: frontend
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
